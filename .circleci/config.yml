version: 2.1
orbs:
  node: circleci/node@4.1.0
  aws-ecr: circleci/aws-ecr@6.15.0
  aws-ecs: circleci/aws-ecs@2.0
  aws-cli: circleci/aws-cli@1.3
  orb-tools: circleci/orb-tools@10.0
  shellcheck: circleci/shellcheck@2.2
  jq: circleci/jq@2.2.0
jobs:
  test:
    executor:
      name: node/default
      tag: 14.15.1
    steps:
    - checkout
    - node/install-packages:
        pkg-manager: npm
    - run:
        command: npm test
      name: Run Mocha tests
        - aws-cli/setup
        - jq/install
  build:
    - run:
      name: Get cluster info
      command: |
        SERVICES_OBJ=$(aws ecs describe-services --cluster "${ECS_CLUSTER_NAME}" --services "${ECS_SERVICE_NAME}")
        VPC_CONF_OBJ=$(echo $SERVICES_OBJ | jq '.services[].networkConfiguration.awsvpcConfiguration')
        SUBNET_ONE=$(echo "$VPC_CONF_OBJ" |  jq '.subnets[0]')
        SUBNET_TWO=$(echo "$VPC_CONF_OBJ" |  jq '.subnets[1]')
        SECURITY_GROUP_IDS=$(echo "$VPC_CONF_OBJ" |  jq '.securityGroups[0]')
        CLUSTER_NAME=$(echo "$SERVICES_OBJ" |  jq '.services[].clusterArn')
        echo "export SUBNET_ONE=$SUBNET_ONE" >> $BASH_ENV
        echo "export SUBNET_TWO=$SUBNET_TWO" >> $BASH_ENV
        echo "export SECURITY_GROUP_IDS=$SECURITY_GROUP_IDS" >> $BASH_ENV=$SECURITY_GROUP_IDS=$SECURITY_GROUP_IDS" >> $BASH_ENV" >> $BASH_ENV
        echo "export CLUSTER_NAME=$CLUSTER_NAME" >> $BASH_ENV
    - run:
        name: Associate cluster
        command: |
          aws ecs put-cluster-capacity-providers \
            --cluster "${ECS_CLUSTER_NAME}" \
            --capacity-providers FARGATE FARGATE_SPOT  \
            --default-capacity-provider-strategy capacityProvider=FARGATE,weight=1 capacityProvider=FARGATE_SPOT,weight=1\                --region ${AWS_DEFAULT_REGION}
workflows:
  node-tests:
    jobs:
    - test
    # Envs: AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, AWS_REGION, AWS_ECR_ACCOUNT_URL
    - aws-ecr/build-and-push-image:
        repo: api-slowlyfood
        tag: "latest,v0.1.${CIRCLE_BUILD_NUM}"
        dockerfile: Dockerfile
        path: .
        requires:
          - test
    - build
    - aws-ecs/run-task:
        requires:
          - build
        cluster: $CLUSTER_NAME
        launch-type: ""
        task-definition: ECSApiSlowlyFood
        subnet-ids: '$SUBNET_ONE, $SUBNET_TWO'
        security-group-ids: $SECURITY_GROUP_IDS
        assign-public-ip : ENABLED
        count: 4